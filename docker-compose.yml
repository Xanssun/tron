services:
  api:
    container_name: tron-api
    build:
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./src/:/app/src/
      - ./migrations/:/app/migrations/
    depends_on:
      - redis
      - postgres
    networks:
      - interconnect
      - postgres.network
    env_file:
      - "./.env"
    command: /bin/sh -c 'alembic upgrade head && python -m src'

  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - '6370:6379'
    networks:
      - interconnect

  postgres:
    container_name: postgres
    image: "postgres:15.6-alpine3.19"
    restart: unless-stopped
    ports:
      - '54522:5432'
    networks:
      - interconnect
      - postgres.network
    env_file:
      - "./.env"
    environment:
      POSTGRES_USER: ${DB_USER:-$USER}
      POSTGRES_DB: ${DB_NAME:-$USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres.data:/var/lib/postgresql/users:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

volumes:
  postgres.data: {}

networks:
  interconnect:
    driver: bridge
  postgres.network: {}
